\begin{algorithm}
\caption{Memory Pressure Calculation}
\begin{algorithmic}[1]
\Require
\State Per-CPU memory pressure: $P_i^{curr}$, $P_i^{prev}$ for each CPU $i$ \Comment{当前和上次的内存压力时间}
\State Per-CPU non-idle time: $N_i^{curr}$, $N_i^{prev}$ for each CPU $i$ \Comment{当前和上次的非空闲时间}
\State Total memory pressure: $total$, $total_{prev}$ \Comment{累积的总压力和上次计算时的总压力}
\State Timestamps: $t_{now}$, $t_{last}$, $t_{next}$ \Comment{当前时间，上次更新时间，下次更新时间}
\State Sampling period: $T = 2000ms$ \Comment{固定采样周期}
\State Decay factor: $\alpha = 1677$ \Comment{10秒窗口的衰减因子: $2^{10}/e^{T/10s}$}
\State Previous average: $avg$ \Comment{上次的10秒平均值}

\Ensure Updated pressure average and next sampling time

\Function{CalcPressure}{}
    \State $W \gets 0$ \Comment{加权压力总和}
    \State $N_{total} \gets 0$ \Comment{非空闲时间总和}
    
    \For{each CPU $i$}
        \State $\delta P_i \gets P_i^{curr} - P_i^{prev}$ \Comment{该CPU的压力增量}
        \State $\delta N_i \gets N_i^{curr} - N_i^{prev}$ \Comment{该CPU的非空闲时间增量}
        \State $W \gets W + \delta P_i \cdot \delta N_i$ \Comment{加权累加}
        \State $N_{total} \gets N_{total} + \delta N_i$
    \EndFor
    
    \State $pressure \gets W / \max(N_{total}, 1)$ \Comment{归一化压力}
    \State $total \gets total + pressure$ \Comment{更新总压力}
    
    \State $t_{now} \gets sched\_clock()$ \Comment{获取当前时间}
    \State $expires \gets t_{next}$ \Comment{预定的更新时间}
    
    \If{$t_{now} < expires$}
        \Return \Comment{还未到更新时间}
    \EndIf
    
    \If{$t_{now} - expires \geq T$}
        \State $missed \gets \lfloor(t_{now} - expires)/T\rfloor$ \Comment{计算错过的周期数}
    \Else
        \State $missed \gets 0$
    \EndIf
    
    \State $t_{next} \gets expires + (missed + 1) \cdot T$ \Comment{设置下次更新时间}
    \State $period \gets t_{now} - (t_{last} + missed \cdot T)$ \Comment{计算实际周期}
    \State $t_{last} \gets t_{now}$
    
    \State $sample \gets total - total_{prev}$ \Comment{这个周期的压力样本}
    
    \If{$sample > period$}
        \State $sample \gets period$ \Comment{压力不能超过100%}
    \EndIf
    
    \State $total_{prev} \gets total_{prev} + sample$ \Comment{更新基准值}
    
    \If{$missed > 0$}
        \State $avg \gets avg \cdot \alpha^{missed}$ \Comment{处理错过的周期}
    \EndIf
    
    \State $pct \gets (sample \cdot 100 \cdot 2^{10}) / period$ \Comment{转换为定点数百分比}
    \State $avg \gets (avg \cdot \alpha + pct \cdot (2^{10} - \alpha)) / 2^{10}$ \Comment{更新平均值}
\EndFunction
\end{algorithmic}
\end{algorithm}